// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: proto/sensor.proto

package sensorpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SensorDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GreenhouseId  string                 `protobuf:"bytes,1,opt,name=greenhouse_id,json=greenhouseId,proto3" json:"greenhouse_id,omitempty"`
	SensorType    string                 `protobuf:"bytes,2,opt,name=sensor_type,json=sensorType,proto3" json:"sensor_type,omitempty"`
	SensorId      string                 `protobuf:"bytes,3,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	Value         float32                `protobuf:"fixed32,4,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp     string                 `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorDataRequest) Reset() {
	*x = SensorDataRequest{}
	mi := &file_proto_sensor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorDataRequest) ProtoMessage() {}

func (x *SensorDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sensor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorDataRequest.ProtoReflect.Descriptor instead.
func (*SensorDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_sensor_proto_rawDescGZIP(), []int{0}
}

func (x *SensorDataRequest) GetGreenhouseId() string {
	if x != nil {
		return x.GreenhouseId
	}
	return ""
}

func (x *SensorDataRequest) GetSensorType() string {
	if x != nil {
		return x.SensorType
	}
	return ""
}

func (x *SensorDataRequest) GetSensorId() string {
	if x != nil {
		return x.SensorId
	}
	return ""
}

func (x *SensorDataRequest) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *SensorDataRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type SensorDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorDataResponse) Reset() {
	*x = SensorDataResponse{}
	mi := &file_proto_sensor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorDataResponse) ProtoMessage() {}

func (x *SensorDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sensor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorDataResponse.ProtoReflect.Descriptor instead.
func (*SensorDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_sensor_proto_rawDescGZIP(), []int{1}
}

func (x *SensorDataResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SensorHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GreenhouseId  string                 `protobuf:"bytes,1,opt,name=greenhouse_id,json=greenhouseId,proto3" json:"greenhouse_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorHistoryRequest) Reset() {
	*x = SensorHistoryRequest{}
	mi := &file_proto_sensor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorHistoryRequest) ProtoMessage() {}

func (x *SensorHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sensor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorHistoryRequest.ProtoReflect.Descriptor instead.
func (*SensorHistoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_sensor_proto_rawDescGZIP(), []int{2}
}

func (x *SensorHistoryRequest) GetGreenhouseId() string {
	if x != nil {
		return x.GreenhouseId
	}
	return ""
}

type SensorDataPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SensorId      string                 `protobuf:"bytes,1,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	SensorType    string                 `protobuf:"bytes,2,opt,name=sensor_type,json=sensorType,proto3" json:"sensor_type,omitempty"`
	Value         float32                `protobuf:"fixed32,3,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp     string                 `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorDataPoint) Reset() {
	*x = SensorDataPoint{}
	mi := &file_proto_sensor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorDataPoint) ProtoMessage() {}

func (x *SensorDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sensor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorDataPoint.ProtoReflect.Descriptor instead.
func (*SensorDataPoint) Descriptor() ([]byte, []int) {
	return file_proto_sensor_proto_rawDescGZIP(), []int{3}
}

func (x *SensorDataPoint) GetSensorId() string {
	if x != nil {
		return x.SensorId
	}
	return ""
}

func (x *SensorDataPoint) GetSensorType() string {
	if x != nil {
		return x.SensorType
	}
	return ""
}

func (x *SensorDataPoint) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *SensorDataPoint) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type SensorHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*SensorDataPoint     `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorHistoryResponse) Reset() {
	*x = SensorHistoryResponse{}
	mi := &file_proto_sensor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorHistoryResponse) ProtoMessage() {}

func (x *SensorHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sensor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorHistoryResponse.ProtoReflect.Descriptor instead.
func (*SensorHistoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_sensor_proto_rawDescGZIP(), []int{4}
}

func (x *SensorHistoryResponse) GetData() []*SensorDataPoint {
	if x != nil {
		return x.Data
	}
	return nil
}

type SensorLastValuesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GreenhouseId  string                 `protobuf:"bytes,1,opt,name=greenhouse_id,json=greenhouseId,proto3" json:"greenhouse_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorLastValuesRequest) Reset() {
	*x = SensorLastValuesRequest{}
	mi := &file_proto_sensor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorLastValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorLastValuesRequest) ProtoMessage() {}

func (x *SensorLastValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sensor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorLastValuesRequest.ProtoReflect.Descriptor instead.
func (*SensorLastValuesRequest) Descriptor() ([]byte, []int) {
	return file_proto_sensor_proto_rawDescGZIP(), []int{5}
}

func (x *SensorLastValuesRequest) GetGreenhouseId() string {
	if x != nil {
		return x.GreenhouseId
	}
	return ""
}

type SensorLastValuesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*SensorDataPoint     `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorLastValuesResponse) Reset() {
	*x = SensorLastValuesResponse{}
	mi := &file_proto_sensor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorLastValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorLastValuesResponse) ProtoMessage() {}

func (x *SensorLastValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sensor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorLastValuesResponse.ProtoReflect.Descriptor instead.
func (*SensorLastValuesResponse) Descriptor() ([]byte, []int) {
	return file_proto_sensor_proto_rawDescGZIP(), []int{6}
}

func (x *SensorLastValuesResponse) GetData() []*SensorDataPoint {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proto_sensor_proto protoreflect.FileDescriptor

const file_proto_sensor_proto_rawDesc = "" +
	"\n" +
	"\x12proto/sensor.proto\x12\x06sensor\"\xaa\x01\n" +
	"\x11SensorDataRequest\x12#\n" +
	"\rgreenhouse_id\x18\x01 \x01(\tR\fgreenhouseId\x12\x1f\n" +
	"\vsensor_type\x18\x02 \x01(\tR\n" +
	"sensorType\x12\x1b\n" +
	"\tsensor_id\x18\x03 \x01(\tR\bsensorId\x12\x14\n" +
	"\x05value\x18\x04 \x01(\x02R\x05value\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\tR\ttimestamp\",\n" +
	"\x12SensorDataResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\";\n" +
	"\x14SensorHistoryRequest\x12#\n" +
	"\rgreenhouse_id\x18\x01 \x01(\tR\fgreenhouseId\"\x83\x01\n" +
	"\x0fSensorDataPoint\x12\x1b\n" +
	"\tsensor_id\x18\x01 \x01(\tR\bsensorId\x12\x1f\n" +
	"\vsensor_type\x18\x02 \x01(\tR\n" +
	"sensorType\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x02R\x05value\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\tR\ttimestamp\"D\n" +
	"\x15SensorHistoryResponse\x12+\n" +
	"\x04data\x18\x01 \x03(\v2\x17.sensor.SensorDataPointR\x04data\">\n" +
	"\x17SensorLastValuesRequest\x12#\n" +
	"\rgreenhouse_id\x18\x01 \x01(\tR\fgreenhouseId\"G\n" +
	"\x18SensorLastValuesResponse\x12+\n" +
	"\x04data\x18\x01 \x03(\v2\x17.sensor.SensorDataPointR\x04data2Y\n" +
	"\x0eSensorReceiver\x12G\n" +
	"\x0eSendSensorData\x12\x19.sensor.SensorDataRequest\x1a\x1a.sensor.SensorDataResponse2\xbe\x01\n" +
	"\x11SensorDataService\x12O\n" +
	"\x10GetSensorHistory\x12\x1c.sensor.SensorHistoryRequest\x1a\x1d.sensor.SensorHistoryResponse\x12X\n" +
	"\x13GetLastSensorValues\x12\x1f.sensor.SensorLastValuesRequest\x1a .sensor.SensorLastValuesResponseB\x17Z\x15proto/sensor;sensorpbb\x06proto3"

var (
	file_proto_sensor_proto_rawDescOnce sync.Once
	file_proto_sensor_proto_rawDescData []byte
)

func file_proto_sensor_proto_rawDescGZIP() []byte {
	file_proto_sensor_proto_rawDescOnce.Do(func() {
		file_proto_sensor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_sensor_proto_rawDesc), len(file_proto_sensor_proto_rawDesc)))
	})
	return file_proto_sensor_proto_rawDescData
}

var file_proto_sensor_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_sensor_proto_goTypes = []any{
	(*SensorDataRequest)(nil),        // 0: sensor.SensorDataRequest
	(*SensorDataResponse)(nil),       // 1: sensor.SensorDataResponse
	(*SensorHistoryRequest)(nil),     // 2: sensor.SensorHistoryRequest
	(*SensorDataPoint)(nil),          // 3: sensor.SensorDataPoint
	(*SensorHistoryResponse)(nil),    // 4: sensor.SensorHistoryResponse
	(*SensorLastValuesRequest)(nil),  // 5: sensor.SensorLastValuesRequest
	(*SensorLastValuesResponse)(nil), // 6: sensor.SensorLastValuesResponse
}
var file_proto_sensor_proto_depIdxs = []int32{
	3, // 0: sensor.SensorHistoryResponse.data:type_name -> sensor.SensorDataPoint
	3, // 1: sensor.SensorLastValuesResponse.data:type_name -> sensor.SensorDataPoint
	0, // 2: sensor.SensorReceiver.SendSensorData:input_type -> sensor.SensorDataRequest
	2, // 3: sensor.SensorDataService.GetSensorHistory:input_type -> sensor.SensorHistoryRequest
	5, // 4: sensor.SensorDataService.GetLastSensorValues:input_type -> sensor.SensorLastValuesRequest
	1, // 5: sensor.SensorReceiver.SendSensorData:output_type -> sensor.SensorDataResponse
	4, // 6: sensor.SensorDataService.GetSensorHistory:output_type -> sensor.SensorHistoryResponse
	6, // 7: sensor.SensorDataService.GetLastSensorValues:output_type -> sensor.SensorLastValuesResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_sensor_proto_init() }
func file_proto_sensor_proto_init() {
	if File_proto_sensor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_sensor_proto_rawDesc), len(file_proto_sensor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_sensor_proto_goTypes,
		DependencyIndexes: file_proto_sensor_proto_depIdxs,
		MessageInfos:      file_proto_sensor_proto_msgTypes,
	}.Build()
	File_proto_sensor_proto = out.File
	file_proto_sensor_proto_goTypes = nil
	file_proto_sensor_proto_depIdxs = nil
}
