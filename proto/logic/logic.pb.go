// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: proto/logic.proto

package logicpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SensorTriggerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GreenhouseId  string                 `protobuf:"bytes,1,opt,name=greenhouse_id,json=greenhouseId,proto3" json:"greenhouse_id,omitempty"`
	SensorType    string                 `protobuf:"bytes,2,opt,name=sensor_type,json=sensorType,proto3" json:"sensor_type,omitempty"`
	SensorId      string                 `protobuf:"bytes,3,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	Value         float32                `protobuf:"fixed32,4,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp     string                 `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorTriggerRequest) Reset() {
	*x = SensorTriggerRequest{}
	mi := &file_proto_logic_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorTriggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorTriggerRequest) ProtoMessage() {}

func (x *SensorTriggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_logic_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorTriggerRequest.ProtoReflect.Descriptor instead.
func (*SensorTriggerRequest) Descriptor() ([]byte, []int) {
	return file_proto_logic_proto_rawDescGZIP(), []int{0}
}

func (x *SensorTriggerRequest) GetGreenhouseId() string {
	if x != nil {
		return x.GreenhouseId
	}
	return ""
}

func (x *SensorTriggerRequest) GetSensorType() string {
	if x != nil {
		return x.SensorType
	}
	return ""
}

func (x *SensorTriggerRequest) GetSensorId() string {
	if x != nil {
		return x.SensorId
	}
	return ""
}

func (x *SensorTriggerRequest) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *SensorTriggerRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type SensorTriggerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        string                 `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorTriggerResponse) Reset() {
	*x = SensorTriggerResponse{}
	mi := &file_proto_logic_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorTriggerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorTriggerResponse) ProtoMessage() {}

func (x *SensorTriggerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_logic_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorTriggerResponse.ProtoReflect.Descriptor instead.
func (*SensorTriggerResponse) Descriptor() ([]byte, []int) {
	return file_proto_logic_proto_rawDescGZIP(), []int{1}
}

func (x *SensorTriggerResponse) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SensorTriggerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_logic_proto protoreflect.FileDescriptor

const file_proto_logic_proto_rawDesc = "" +
	"\n" +
	"\x11proto/logic.proto\x12\x05logic\"\xad\x01\n" +
	"\x14SensorTriggerRequest\x12#\n" +
	"\rgreenhouse_id\x18\x01 \x01(\tR\fgreenhouseId\x12\x1f\n" +
	"\vsensor_type\x18\x02 \x01(\tR\n" +
	"sensorType\x12\x1b\n" +
	"\tsensor_id\x18\x03 \x01(\tR\bsensorId\x12\x14\n" +
	"\x05value\x18\x04 \x01(\x02R\x05value\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\tR\ttimestamp\"I\n" +
	"\x15SensorTriggerResponse\x12\x16\n" +
	"\x06action\x18\x01 \x01(\tR\x06action\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2`\n" +
	"\x0eLogicProcessor\x12N\n" +
	"\x11ProcessSensorData\x12\x1b.logic.SensorTriggerRequest\x1a\x1c.logic.SensorTriggerResponseB\x15Z\x13proto/logic;logicpbb\x06proto3"

var (
	file_proto_logic_proto_rawDescOnce sync.Once
	file_proto_logic_proto_rawDescData []byte
)

func file_proto_logic_proto_rawDescGZIP() []byte {
	file_proto_logic_proto_rawDescOnce.Do(func() {
		file_proto_logic_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_logic_proto_rawDesc), len(file_proto_logic_proto_rawDesc)))
	})
	return file_proto_logic_proto_rawDescData
}

var file_proto_logic_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_logic_proto_goTypes = []any{
	(*SensorTriggerRequest)(nil),  // 0: logic.SensorTriggerRequest
	(*SensorTriggerResponse)(nil), // 1: logic.SensorTriggerResponse
}
var file_proto_logic_proto_depIdxs = []int32{
	0, // 0: logic.LogicProcessor.ProcessSensorData:input_type -> logic.SensorTriggerRequest
	1, // 1: logic.LogicProcessor.ProcessSensorData:output_type -> logic.SensorTriggerResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_logic_proto_init() }
func file_proto_logic_proto_init() {
	if File_proto_logic_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_logic_proto_rawDesc), len(file_proto_logic_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_logic_proto_goTypes,
		DependencyIndexes: file_proto_logic_proto_depIdxs,
		MessageInfos:      file_proto_logic_proto_msgTypes,
	}.Build()
	File_proto_logic_proto = out.File
	file_proto_logic_proto_goTypes = nil
	file_proto_logic_proto_depIdxs = nil
}
